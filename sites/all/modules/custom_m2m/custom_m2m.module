<?php
// $Id: custom_m2m.module,v 1.236.2.3 2011/04/14 10:09:19 Tanzeel Exp $
function custom_m2m_menu(){
  $items['add_modules'] = array(
    'description' => 'Add Devices',
    'page callback' => 'custom_m2m_add_module_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'title' => ''
  );
  //$items['']
  return $items;
}

function custom_m2m_views_api(){
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'custom_m2m') . '/inc'
  );
}

function custom_m2m_add_module_page(){
    return "Please select the type of module you'd like to create.";
}

/**
 * Implementation of hook_form_alter().
 */
function custom_m2m_form_alter(&$form, $form_state, $form_id) {
  if($form_id == 'device_node_form'){
    global $user;
    if($user->uid){
      $query = db_query("SELECT cc.field_company_value FROM {node} n
                                          LEFT JOIN {content_field_company} cc ON n.nid = cc.nid
                                          WHERE uid = %d AND type = '%s'", $user->uid, 'profile');
      while($res = db_fetch_object($query)){
          $options .= $res->field_company_value.'
            ';
      }
      $form['#field_info']['field_company']['allowed_values'] = $options;
    }
  }
}

function custom_m2m_form_views_exposed_form_alter(&$form, &$form_state) {
    if($form['#id'] == 'views-exposed-form-featured-products-page-1'){
        $form['field_featured_product_category_value_many_to_one']['#options'] = array_merge(array('all' => 'All'), $form['field_featured_product_category_value_many_to_one']['#options']);
    }else{
        $form['submit']['#value'] = 'Search for Device';
        $form['view_all'] = array('#type' => 'markup', '#value' => '<input id="view-all" class="form-submit" type="button" value="View All" onClick="var form = $jq(this).closest(\'form\');  form.find(\'option:selected\').removeAttr(\'selected\'); form.submit();return false;">');
        drupal_add_js(drupal_get_path('theme', 'm2m2') . '/js/jquery.multiselect.min.js', 'theme');
        drupal_add_js(drupal_get_path('theme', 'm2m2') . '/js/multiselect_init.js', 'theme');
    }
}

function custom_m2m_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('Logged In User Options');
      return $blocks;
    case 'view':
      global $user;
      //if(arg(0) == 'node'){
      //  $node = node_load(arg(1));
      //}
      $block[0]['content'] = '';
      //if((arg(0)=='user') || (arg(0)=='user' && arg(1)==$user->uid && $user->uid!=0) || (strpos($_SERVER['REQUEST_URI'],"manage/device")!==false) || (!empty($node) && $node->type=='profile') || (strpos($_SERVER['REQUEST_URI'],"manage/owndevice")!==false)){
      $display_content_tabs = FALSE;
        if(strpos($_SERVER['REQUEST_URI'], "user/".$user->uid."/edit")!==false) $act2=' class="active"';
        if(strpos($_SERVER['REQUEST_URI'], "node/add/device")!==false){
            $display_content_tabs = TRUE;
            $act3=' class="active"';
        }
        if(strpos($_SERVER['REQUEST_URI'], "node/add/connectivity-module")!==false){
            $display_content_tabs = TRUE;
            $act6=' class="active"';
        }
        if(strpos($_SERVER['REQUEST_URI'], "node/add/router")!==false){
            $display_content_tabs = TRUE;
            $act7=' class="active"';
        }
        if(strpos($_SERVER['REQUEST_URI'], "node/add/featured-product")!==false){
            $display_content_tabs = TRUE;
            $act8=' class="active"';
        }
        if(strpos($_SERVER['REQUEST_URI'], "add_modules")!==false){
            $display_content_tabs = TRUE;
            $act9=' class="active"';
        }
        if((strpos($_SERVER['REQUEST_URI'], "user/".$user->uid)!==false || strpos($_SERVER['REQUEST_URI'], "user")!==false) && arg(2)=='') $act1=' class="active"';
        if(strpos($_SERVER['REQUEST_URI'], "manage/device")!==false && arg(2)=='') $act4=' class="active"';
        if(strpos($_SERVER['REQUEST_URI'], "manage/owndevice")!==false && arg(2)=='') $act5=' class="active"';

        $user_fields = user_load($user->uid);
        //if($user_fields->roles[3]=='Sales Rep')
        $device_url1="manage/owndevice";
        //else
        //if($user_fields->roles[3]=='Sales Rep'){
        //  $device_url="manage/device";
        //}else{
        //  $device_url="managedevice";
        //}
        $block[0]['content'] .= '<ul class="tabs primary"><li'.$act1.'>'.l('View', 'user/'.$user->uid).'</li><li'.$act2.'>'.l('Update Profile', 'user/'.$user->uid.'/edit').'</li>';
        if($user_fields->roles[3]=='Sales Rep'){
          $block[0]['content'] .= '<li'.$act5.'>'.l('Approve Devices', $device_url1).'</li>';
          $device_url="manage/device";
        }else{
          $device_url="managedevice";
        }
        $block[0]['content'] .= '<li'.$act9.'>'.l('Add Devices', 'add_modules').'</li>';
        $block[0]['content'] .= '<li'.$act4.'>'.l('Manage Devices', $device_url).'</li></ul>';
        
        if($display_content_tabs == TRUE){
          $block[0]['content'] .= '<ul class="tabs secondary">
            <li'.$act3.'>'.l('Add Cellular Module', 'node/add/device').'</li>
            <li'.$act6.'>'.l('Add Connectivity Module', 'node/add/connectivity-module').'</li>
            <li'.$act7.'>'.l('Add Wireless Gateway/Router', 'node/add/router').'</li>
            <li'.$act8.'>'.l('Add Featured Product', 'node/add/featured-product').'</li>
          </ul>';
        }
        //}else{
        //  if ($tabs): $block[0]['content'] .= '<ul class="tabs primary">'. $tabs .'</ul></div>'; endif;
            //if ($tabs2): print '<ul class="tabs secondary">'. $tabs2 .'</ul>'; endif;
      //}
      //if ($show_messages && $messages): echo "<br><br>";print $messages; endif;
      $block[0]['content'] .= $help;
      //$block[0]['subject'] = t('New Module');
      break;
  }
  return $block[$delta];
}

/*Hook into the nodewords API to add googlebot tag with the same data as the robots tag*/
function custom_m2m_nodewords_api() {
  return array('version' => '1.13');
}

function custom_m2m_nodewords_tags_alter(&$output, $parameters) {
  if(isset($output['robots'])){
    $output['googlebot'] = $output['robots'];
  }
  if (empty($output['abstract']) && $parameters['type'] == NODEWORDS_TYPE_PAGE) {
    $output['abstract'] = t('Node content');
  }
}

function custom_m2m_nodewords_tags_info() {
  $tags = array(
    'googlebot' => array(
      'callback' => 'nodewords_basic_robots',
      'context' => array(
        'allowed' => array(
          NODEWORDS_TYPE_DEFAULT,
          NODEWORDS_TYPE_ERRORPAGE,
          NODEWORDS_TYPE_FRONTPAGE,
          NODEWORDS_TYPE_NODE,
          NODEWORDS_TYPE_OFFLINE,
          NODEWORDS_TYPE_PAGE,
          NODEWORDS_TYPE_PAGER,
          NODEWORDS_TYPE_TERM,
          NODEWORDS_TYPE_TRACKER,
          NODEWORDS_TYPE_USER,
          NODEWORDS_TYPE_VOCABULARY,
        ),
      ),
      'label' => t('Googlebot'),
      'permission' => 'edit meta tag ROBOTS',
      'templates' => array(
        'head' => array(
          'googlebot' => NODEWORDS_META,
        ),
      ),
    ),
  );

  return $tags;
}